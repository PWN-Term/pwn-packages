--- a/Source/Tests/LinuxSyscalls/x32/Time.cpp
+++ b/Source/Tests/LinuxSyscalls/x32/Time.cpp
@@ -10,7 +10,6 @@
 
 #include "Tests/LinuxSyscalls/x64/Syscalls.h"
 
-#include <bits/types/clockid_t.h>
 #include <stdint.h>
 #include <syscall.h>
 #include <sys/stat.h>
@@ -165,6 +164,7 @@
       SYSCALL_ERRNO();
     });
 
+#if !defined(__ANDROID__) || __ANDROID_API__ >= 26
     REGISTER_SYSCALL_IMPL_X32(futimesat, [](FEXCore::Core::CpuStateFrame *Frame, int dirfd, const char *pathname, const timeval32 times[2]) -> uint64_t {
       uint64_t Result = 0;
       if (times) {
@@ -177,6 +177,7 @@
       }
       SYSCALL_ERRNO();
     });
+#endif
 
     REGISTER_SYSCALL_IMPL_X32(utimensat, [](FEXCore::Core::CpuStateFrame *Frame, int dirfd, const char *pathname, const compat_ptr<timespec32> times, int flags) -> uint64_t {
       uint64_t Result = 0;
