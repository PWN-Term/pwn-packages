--- ./jdk/src/solaris/native/sun/xawt/XToolkit.c.orig	2021-05-11 07:23:04.712810822 +0000
+++ ./jdk/src/solaris/native/sun/xawt/XToolkit.c	2021-05-11 07:32:00.504235408 +0000
@@ -27,9 +27,6 @@
 #include <X11/Xutil.h>
 #include <X11/Xos.h>
 #include <X11/Xatom.h>
-#ifdef __linux__
-#include <execinfo.h>
-#endif
 
 #include <jvm.h>
 #include <jni.h>
@@ -45,7 +42,6 @@
 #include "sun_awt_X11_XToolkit.h"
 #include "java_awt_SystemColor.h"
 #include "java_awt_TrayIcon.h"
-#include <X11/extensions/XTest.h>
 
 #include <unistd.h>
 
@@ -796,26 +792,6 @@
     return ret;
 }
 
-#ifdef __linux__
-void print_stack(void)
-{
-  void *array[10];
-  size_t size;
-  char **strings;
-  size_t i;
-
-  size = backtrace (array, 10);
-  strings = backtrace_symbols (array, size);
-
-  fprintf (stderr, "Obtained %zd stack frames.\n", size);
-
-  for (i = 0; i < size; i++)
-     fprintf (stderr, "%s\n", strings[i]);
-
-  free (strings);
-}
-#endif
-
 Window get_xawt_root_shell(JNIEnv *env) {
   static jclass classXRootWindow = NULL;
   static jmethodID methodGetXRootWindow = NULL;
@@ -1001,66 +977,9 @@
 }
 
 int32_t getNumButtons() {
-    int32_t major_opcode, first_event, first_error;
-    int32_t xinputAvailable;
-    int32_t numDevices, devIdx, clsIdx;
-    XDeviceInfo* devices;
-    XDeviceInfo* aDevice;
-    XButtonInfo* bInfo;
-    int32_t local_num_buttons = 0;
-
-    /* 4700242:
-     * If XTest is asked to press a non-existant mouse button
-     * (i.e. press Button3 on a system configured with a 2-button mouse),
-     * then a crash may happen.  To avoid this, we use the XInput
-     * extension to query for the number of buttons on the XPointer, and check
-     * before calling XTestFakeButtonEvent().
-     */
-    xinputAvailable = XQueryExtension(awt_display, INAME, &major_opcode, &first_event, &first_error);
-    if (xinputAvailable) {
-        DTRACE_PRINTLN3("RobotPeer: XQueryExtension(XINPUT) returns major_opcode = %d, first_event = %d, first_error = %d",
-                        major_opcode, first_event, first_error);
-        devices = XListInputDevices(awt_display, &numDevices);
-        for (devIdx = 0; devIdx < numDevices; devIdx++) {
-            aDevice = &(devices[devIdx]);
-#ifdef IsXExtensionPointer
-            if (aDevice->use == IsXExtensionPointer) {
-                for (clsIdx = 0; clsIdx < aDevice->num_classes; clsIdx++) {
-                    if (aDevice->inputclassinfo[clsIdx].class == ButtonClass) {
-                        bInfo = (XButtonInfo*)(&(aDevice->inputclassinfo[clsIdx]));
-                        local_num_buttons = bInfo->num_buttons;
-                        DTRACE_PRINTLN1("RobotPeer: XPointer has %d buttons", num_buttons);
-                        break;
-                    }
-                }
-                break;
-            }
-#endif
-            if (local_num_buttons <= 0 ) {
-                if (aDevice->use == IsXPointer) {
-                    for (clsIdx = 0; clsIdx < aDevice->num_classes; clsIdx++) {
-                        if (aDevice->inputclassinfo[clsIdx].class == ButtonClass) {
-                            bInfo = (XButtonInfo*)(&(aDevice->inputclassinfo[clsIdx]));
-                            local_num_buttons = bInfo->num_buttons;
-                            DTRACE_PRINTLN1("RobotPeer: XPointer has %d buttons", num_buttons);
-                            break;
-                        }
-                    }
-                    break;
-                }
-            }
-        }
-
-        XFreeDeviceList(devices);
-    }
-    else {
-        DTRACE_PRINTLN1("RobotPeer: XINPUT extension is unavailable, assuming %d mouse buttons", num_buttons);
-    }
-    if (local_num_buttons == 0 ) {
-        local_num_buttons = 3;
-    }
-
-    return local_num_buttons;
+    // Assuming 3 mouse buttons :)
+    // I was just too tired to port libxtst
+    return 3;
 }
 
 /*
