From 690d79b6489457a02e18303209905dbe94fbe5ce Mon Sep 17 00:00:00 2001
From: CosineMath <1365471105@qq.com>
Date: Sun, 15 Nov 2020 00:23:47 +0800
Subject: [PATCH] Changes on awt, sa-jdi, demos, launchers and some other
 things. Now can build jdk successfully.

---
 common/autoconf/generated-configure.sh                   | 3 +++
 common/autoconf/jdk-options.m4                           | 3 +++
 jdk/make/CompileDemos.gmk                                | 3 ++-
 jdk/make/CompileLaunchers.gmk                            | 3 ++-
 jdk/src/share/instrument/JarFacade.c                     | 4 ++++
 jdk/src/share/native/sun/misc/URLClassPath.c             | 3 ++-
 jdk/src/solaris/native/sun/awt/jawt.c                    | 2 +-
 jdk/src/solaris/native/sun/security/pkcs11/j2secmod_md.c | 3 +++
 8 files changed, 20 insertions(+), 4 deletions(-)

diff --git a/common/autoconf/generated-configure.sh b/common/autoconf/generated-configure.sh
index a11e40bd95..0efb4d9132 100644
--- a/common/autoconf/generated-configure.sh
+++ b/common/autoconf/generated-configure.sh
@@ -14623,6 +14623,9 @@ $as_echo "$with_jvm_variants" >&6; }
   if test "x$VAR_CPU" = xppc64 -o "x$VAR_CPU" = xppc64le ; then
     INCLUDE_SA=false
   fi
+  if test "x$OPENJDK_TARGET_CPU" = xaarch64; then
+    INCLUDE_SA=false
+  fi
 
 
   if test "x$OPENJDK_TARGET_OS" = "xmacosx"; then
diff --git a/common/autoconf/jdk-options.m4 b/common/autoconf/jdk-options.m4
index b1917664a3..8b675bc293 100644
--- a/common/autoconf/jdk-options.m4
+++ b/common/autoconf/jdk-options.m4
@@ -161,6 +161,9 @@ AC_DEFUN_ONCE([JDKOPT_SETUP_JVM_VARIANTS],
   if test "x$VAR_CPU" = xppc64 -o "x$VAR_CPU" = xppc64le ; then
     INCLUDE_SA=false
   fi
+  if test "x$OPENJDK_TARGET_CPU" = xaarch64; then
+    INCLUDE_SA=false
+  fi
   AC_SUBST(INCLUDE_SA)
 
   if test "x$OPENJDK_TARGET_OS" = "xmacosx"; then
diff --git a/jdk/make/CompileDemos.gmk b/jdk/make/CompileDemos.gmk
index 6c5eb43279..6423e28320 100644
--- a/jdk/make/CompileDemos.gmk
+++ b/jdk/make/CompileDemos.gmk
@@ -320,10 +320,11 @@ ifeq ($(OPENJDK_TARGET_OS), aix)
   BUILD_LIBHPROF_AIX_EXTRA_CFLAGS += -I$(JDK_TOPDIR)/src/aix/porting
 endif
 
+# libpthread.so not available on Android. 
 $(eval $(call SetupJVMTIDemo,hprof, java_crw_demo, \
     -I$(JDK_TOPDIR)/src/share/npt -I$(JDK_TOPDIR)/src/$(OPENJDK_TARGET_OS_API_DIR)/npt \
     $(BUILD_LIBHPROF_AIX_EXTRA_CFLAGS), C, \
-    -ldl, ws2_32.lib winmm.lib, -lsocket -lnsl, -lpthread, $(BUILD_LIBHPROF_AIX_EXTRA_SRC)))
+    -ldl, ws2_32.lib winmm.lib, -lsocket -lnsl, $(BUILD_LIBHPROF_AIX_EXTRA_SRC)))
 
 $(eval $(call SetupJVMTIDemo,minst, agent_util java_crw_demo))
 $(eval $(call SetupJVMTIDemo,mtrace, agent_util java_crw_demo))
diff --git a/jdk/make/CompileLaunchers.gmk b/jdk/make/CompileLaunchers.gmk
index 704fd4fb70..e35c3557c9 100644
--- a/jdk/make/CompileLaunchers.gmk
+++ b/jdk/make/CompileLaunchers.gmk
@@ -147,6 +147,7 @@ define SetupLauncher
     endif
   endif
 
+  # libpthread.so not available on Android.
   $(call SetupNativeCompilation,BUILD_LAUNCHER_$1, \
       SRC := $(JDK_TOPDIR)/src/share/bin, \
       INCLUDE_FILES := main.c, \
@@ -168,7 +169,7 @@ define SetupLauncher
           $(ORIGIN_ARG) \
           $$($1_LDFLAGS), \
       LDFLAGS_macosx := $(call SET_SHARED_LIBRARY_NAME,$1), \
-      LDFLAGS_linux := -lpthread \
+      LDFLAGS_linux := \
           $(call SET_SHARED_LIBRARY_NAME,$(LIBRARY_PREFIX)$(SHARED_LIBRARY_SUFFIX)), \
       LDFLAGS_solaris := $$($1_LDFLAGS_solaris) \
           $(call SET_SHARED_LIBRARY_NAME,$(LIBRARY_PREFIX)$(SHARED_LIBRARY_SUFFIX)), \
diff --git a/jdk/src/share/instrument/JarFacade.c b/jdk/src/share/instrument/JarFacade.c
index 07ae23c222..6a422ef73a 100644
--- a/jdk/src/share/instrument/JarFacade.c
+++ b/jdk/src/share/instrument/JarFacade.c
@@ -34,6 +34,10 @@
 #include <string.h>
 #include <stdlib.h>
 
+#ifdef __ANDROID__
+extern int isspace(int);
+#endif
+
 #include "jni.h"
 #include "manifest_info.h"
 #include "JarFacade.h"
diff --git a/jdk/src/share/native/sun/misc/URLClassPath.c b/jdk/src/share/native/sun/misc/URLClassPath.c
index e0ad4f8138..a1efcd600d 100644
--- a/jdk/src/share/native/sun/misc/URLClassPath.c
+++ b/jdk/src/share/native/sun/misc/URLClassPath.c
@@ -35,7 +35,8 @@
 
 extern char*
 getUTF(JNIEnv *env, jstring str, char* localBuf, int bufSize);
-
+extern jboolean VerifyFixClassname(char *utf_name);
+extern jboolean VerifyClassname(char *utf_name, jboolean arrayAllowed);
 
 JNIEXPORT jboolean JNICALL
 Java_sun_misc_URLClassPath_knownToNotExist0(JNIEnv *env, jclass cls, jobject loader,
diff --git a/jdk/src/solaris/native/sun/awt/jawt.c b/jdk/src/solaris/native/sun/awt/jawt.c
index 64284bc6e9..b3584c7efe 100644
--- a/jdk/src/solaris/native/sun/awt/jawt.c
+++ b/jdk/src/solaris/native/sun/awt/jawt.c
@@ -33,7 +33,7 @@
  */
 JNIEXPORT jboolean JNICALL JAWT_GetAWT(JNIEnv* env, JAWT* awt)
 {
-#if defined(JAVASE_EMBEDDED) && defined(HEADLESS)
+#if defined(JAVASE_EMBEDDED) || defined(HEADLESS)
     /* there are no AWT libs available at all */
     return JNI_FALSE;
 #else
diff --git a/jdk/src/solaris/native/sun/security/pkcs11/j2secmod_md.c b/jdk/src/solaris/native/sun/security/pkcs11/j2secmod_md.c
index 0b89f11c21..36ebce4402 100644
--- a/jdk/src/solaris/native/sun/security/pkcs11/j2secmod_md.c
+++ b/jdk/src/solaris/native/sun/security/pkcs11/j2secmod_md.c
@@ -33,6 +33,9 @@
 
 #include "j2secmod.h"
 
+extern void throwIOException(JNIEnv *env, const char *message);
+extern void throwNullPointerException(JNIEnv *env, const char *message);
+
 void *findFunction(JNIEnv *env, jlong jHandle, const char *functionName) {
     void *hModule = (void*)jlong_to_ptr(jHandle);
     void *fAddress = dlsym(hModule, functionName);
