# This file was generated by CMake because it detected TRY_RUN() commands
# in crosscompiling mode. It will be overwritten by the next CMake run.
# Copy it to a safe location, set the variables to appropriate values
# and use it then to preset the CMake cache (using -C).


# TEST_LFS_WORKS_RUN
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set TEST_LFS_WORKS_RUN to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# TEST_LFS_WORKS_RUN__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set TEST_LFS_WORKS_RUN__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The TEST_LFS_WORKS_COMPILE variable holds the build result for this TRY_RUN().
# 
# Source file   : /home/builder/.termux-build/libhdf5/src/config/cmake_ext_mod/HDFTests.c
# Executable    : /home/builder/.termux-build/libhdf5/build/CMakeFiles/cmTC_0c83a-TEST_LFS_WORKS_RUN
# Run arguments : 
#    Called from: [3]	/home/builder/.termux-build/libhdf5/src/config/cmake_ext_mod/ConfigureChecks.cmake
#                 [2]	/home/builder/.termux-build/libhdf5/src/config/cmake/ConfigureChecks.cmake
#                 [1]	/home/builder/.termux-build/libhdf5/src/CMakeLists.txt

set( TEST_LFS_WORKS_RUN
     "1"
     CACHE STRING "Result from TRY_RUN" FORCE)

set( TEST_LFS_WORKS_RUN__TRYRUN_OUTPUT
     ""
     CACHE STRING "Output from TRY_RUN" FORCE)


# H5_PRINTF_LL_TEST_RUN
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set H5_PRINTF_LL_TEST_RUN to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# H5_PRINTF_LL_TEST_RUN__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set H5_PRINTF_LL_TEST_RUN__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The H5_PRINTF_LL_TEST_COMPILE variable holds the build result for this TRY_RUN().
# 
# Source file   : /home/builder/.termux-build/libhdf5/src/config/cmake_ext_mod/HDFTests.c
# Executable    : /home/builder/.termux-build/libhdf5/build/CMakeFiles/cmTC_0923e-H5_PRINTF_LL_TEST_RUN
# Run arguments : 
#    Called from: [3]	/home/builder/.termux-build/libhdf5/src/config/cmake_ext_mod/ConfigureChecks.cmake
#                 [2]	/home/builder/.termux-build/libhdf5/src/config/cmake/ConfigureChecks.cmake
#                 [1]	/home/builder/.termux-build/libhdf5/src/CMakeLists.txt

set( H5_PRINTF_LL_TEST_RUN 
     "0"
     CACHE STRING "Result from TRY_RUN" FORCE)

set( H5_PRINTF_LL_TEST_RUN__TRYRUN_OUTPUT 
     "H5_PRINTF_LL_WIDTH=[l]"
     CACHE STRING "Output from TRY_RUN" FORCE)


# H5_LDOUBLE_TO_LONG_SPECIAL_RUN
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set H5_LDOUBLE_TO_LONG_SPECIAL_RUN to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# H5_LDOUBLE_TO_LONG_SPECIAL_RUN__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set H5_LDOUBLE_TO_LONG_SPECIAL_RUN__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The H5_LDOUBLE_TO_LONG_SPECIAL_COMPILE variable holds the build result for this TRY_RUN().
# 
# Source file   : /home/builder/.termux-build/libhdf5/src/config/cmake/ConversionTests.c
# Executable    : /home/builder/.termux-build/libhdf5/build/CMakeFiles/cmTC_b96b8-H5_LDOUBLE_TO_LONG_SPECIAL_RUN
# Run arguments : 
#    Called from: [3]	/home/builder/.termux-build/libhdf5/src/config/cmake/ConfigureChecks.cmake
#                 [2]	/home/builder/.termux-build/libhdf5/src/config/cmake/ConfigureChecks.cmake
#                 [1]	/home/builder/.termux-build/libhdf5/src/CMakeLists.txt

set( H5_LDOUBLE_TO_LONG_SPECIAL_RUN 
     "1"
     CACHE STRING "Result from TRY_RUN" FORCE)

set( H5_LDOUBLE_TO_LONG_SPECIAL_RUN__TRYRUN_OUTPUT 
     ""
     CACHE STRING "Output from TRY_RUN" FORCE)


# H5_LONG_TO_LDOUBLE_SPECIAL_RUN
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set H5_LONG_TO_LDOUBLE_SPECIAL_RUN to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# H5_LONG_TO_LDOUBLE_SPECIAL_RUN__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set H5_LONG_TO_LDOUBLE_SPECIAL_RUN__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The H5_LONG_TO_LDOUBLE_SPECIAL_COMPILE variable holds the build result for this TRY_RUN().
# 
# Source file   : /home/builder/.termux-build/libhdf5/src/config/cmake/ConversionTests.c
# Executable    : /home/builder/.termux-build/libhdf5/build/CMakeFiles/cmTC_f960d-H5_LONG_TO_LDOUBLE_SPECIAL_RUN
# Run arguments : 
#    Called from: [3]	/home/builder/.termux-build/libhdf5/src/config/cmake/ConfigureChecks.cmake
#                 [2]	/home/builder/.termux-build/libhdf5/src/config/cmake/ConfigureChecks.cmake
#                 [1]	/home/builder/.termux-build/libhdf5/src/CMakeLists.txt

set( H5_LONG_TO_LDOUBLE_SPECIAL_RUN 
     "1"
     CACHE STRING "Result from TRY_RUN" FORCE)

set( H5_LONG_TO_LDOUBLE_SPECIAL_RUN__TRYRUN_OUTPUT 
     ""
     CACHE STRING "Output from TRY_RUN" FORCE)


# H5_LDOUBLE_TO_LLONG_ACCURATE_RUN
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set H5_LDOUBLE_TO_LLONG_ACCURATE_RUN to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# H5_LDOUBLE_TO_LLONG_ACCURATE_RUN__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set H5_LDOUBLE_TO_LLONG_ACCURATE_RUN__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The H5_LDOUBLE_TO_LLONG_ACCURATE_COMPILE variable holds the build result for this TRY_RUN().
# 
# Source file   : /home/builder/.termux-build/libhdf5/src/config/cmake/ConversionTests.c
# Executable    : /home/builder/.termux-build/libhdf5/build/CMakeFiles/cmTC_39750-H5_LDOUBLE_TO_LLONG_ACCURATE_RUN
# Run arguments : 
#    Called from: [3]	/home/builder/.termux-build/libhdf5/src/config/cmake/ConfigureChecks.cmake
#                 [2]	/home/builder/.termux-build/libhdf5/src/config/cmake/ConfigureChecks.cmake
#                 [1]	/home/builder/.termux-build/libhdf5/src/CMakeLists.txt

set( H5_LDOUBLE_TO_LLONG_ACCURATE_RUN 
     "0"
     CACHE STRING "Result from TRY_RUN" FORCE)

set( H5_LDOUBLE_TO_LLONG_ACCURATE_RUN__TRYRUN_OUTPUT 
     ""
     CACHE STRING "Output from TRY_RUN" FORCE)


# H5_LLONG_TO_LDOUBLE_CORRECT_RUN
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set H5_LLONG_TO_LDOUBLE_CORRECT_RUN to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# H5_LLONG_TO_LDOUBLE_CORRECT_RUN__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set H5_LLONG_TO_LDOUBLE_CORRECT_RUN__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The H5_LLONG_TO_LDOUBLE_CORRECT_COMPILE variable holds the build result for this TRY_RUN().
# 
# Source file   : /home/builder/.termux-build/libhdf5/src/config/cmake/ConversionTests.c
# Executable    : /home/builder/.termux-build/libhdf5/build/CMakeFiles/cmTC_e6f7f-H5_LLONG_TO_LDOUBLE_CORRECT_RUN
# Run arguments : 
#    Called from: [3]	/home/builder/.termux-build/libhdf5/src/config/cmake/ConfigureChecks.cmake
#                 [2]	/home/builder/.termux-build/libhdf5/src/config/cmake/ConfigureChecks.cmake
#                 [1]	/home/builder/.termux-build/libhdf5/src/CMakeLists.txt

set( H5_LLONG_TO_LDOUBLE_CORRECT_RUN 
     "0"
     CACHE STRING "Result from TRY_RUN" FORCE)

set( H5_LLONG_TO_LDOUBLE_CORRECT_RUN__TRYRUN_OUTPUT 
     ""
     CACHE STRING "Output from TRY_RUN" FORCE)


# H5_NO_ALIGNMENT_RESTRICTIONS_RUN
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set H5_NO_ALIGNMENT_RESTRICTIONS_RUN to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# H5_NO_ALIGNMENT_RESTRICTIONS_RUN__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set H5_NO_ALIGNMENT_RESTRICTIONS_RUN__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The H5_NO_ALIGNMENT_RESTRICTIONS_COMPILE variable holds the build result for this TRY_RUN().
# 
# Source file   : /home/builder/.termux-build/libhdf5/src/config/cmake/ConversionTests.c
# Executable    : /home/builder/.termux-build/libhdf5/build/CMakeFiles/cmTC_178af-H5_NO_ALIGNMENT_RESTRICTIONS_RUN
# Run arguments : 
#    Called from: [3]	/home/builder/.termux-build/libhdf5/src/config/cmake/ConfigureChecks.cmake
#                 [2]	/home/builder/.termux-build/libhdf5/src/config/cmake/ConfigureChecks.cmake
#                 [1]	/home/builder/.termux-build/libhdf5/src/CMakeLists.txt

set( H5_NO_ALIGNMENT_RESTRICTIONS_RUN 
     "0"
     CACHE STRING "Result from TRY_RUN" FORCE)

set( H5_NO_ALIGNMENT_RESTRICTIONS_RUN__TRYRUN_OUTPUT 
     ""
     CACHE STRING "Output from TRY_RUN" FORCE)



# H5_DISABLE_SOME_LDOUBLE_CONV_RUN
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set H5_DISABLE_SOME_LDOUBLE_CONV_RUN to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# H5_DISABLE_SOME_LDOUBLE_CONV_RUN__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set H5_DISABLE_SOME_LDOUBLE_CONV_RUN__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The H5_DISABLE_SOME_LDOUBLE_CONV_COMPILE variable holds the build result for this TRY_RUN().
# 
# Source file   : /home/builder/.termux-build/libhdf5/src/config/cmake/ConversionTests.c
# Executable    : /home/builder/.termux-build/libhdf5/build/CMakeFiles/cmTC_3ff45-H5_DISABLE_SOME_LDOUBLE_CONV_RUN
# Run arguments : 
#    Called from: [3]	/home/builder/.termux-build/libhdf5/src/config/cmake/ConfigureChecks.cmake
#                 [2]	/home/builder/.termux-build/libhdf5/src/config/cmake/ConfigureChecks.cmake
#                 [1]	/home/builder/.termux-build/libhdf5/src/CMakeLists.txt

set( H5_DISABLE_SOME_LDOUBLE_CONV_RUN 
     "1"
     CACHE STRING "Result from TRY_RUN" FORCE)

set( H5_DISABLE_SOME_LDOUBLE_CONV_RUN__TRYRUN_OUTPUT 
     ""
     CACHE STRING "Output from TRY_RUN" FORCE)

